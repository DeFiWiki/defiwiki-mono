{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _regeneratorRuntime = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _classCallCheck = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.toSignedPayload = exports.toPayload = exports.EosioAuthProvider = void 0;\n\nvar caip_1 = require(\"caip\");\n\nvar util_1 = require(\"./util\");\n\nvar ethereum_1 = require(\"./ethereum\");\n\nvar sha256Stable = __importStar(require(\"@stablelib/sha256\"));\n\nvar uint8arrays = __importStar(require(\"uint8arrays\"));\n\nvar maxWordLength = 12;\n\nvar EosioAuthProvider = /*#__PURE__*/function () {\n  function EosioAuthProvider(provider, address) {\n    _classCallCheck(this, EosioAuthProvider);\n\n    this.provider = provider;\n    this.address = address;\n    this.isAuthProvider = true;\n  }\n\n  _createClass(EosioAuthProvider, [{\n    key: \"accountId\",\n    value: function () {\n      var _accountId = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var chainId;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.t0 = toCAIPChainId;\n                _context.next = 3;\n                return this.provider.getChainId();\n\n              case 3:\n                _context.t1 = _context.sent;\n                chainId = (0, _context.t0)(_context.t1);\n                return _context.abrupt(\"return\", new caip_1.AccountID({\n                  address: this.address,\n                  chainId: \"eosio:\".concat(chainId)\n                }));\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function accountId() {\n        return _accountId.apply(this, arguments);\n      }\n\n      return accountId;\n    }()\n  }, {\n    key: \"authenticate\",\n    value: function () {\n      var _authenticate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(message) {\n        var accountID, signedPayload, signatureBytes, digest;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.accountId();\n\n              case 2:\n                accountID = _context2.sent;\n                _context2.next = 5;\n                return toSignedPayload(message, accountID, this.provider);\n\n              case 5:\n                signedPayload = _context2.sent;\n                signatureBytes = uint8arrays.fromString(signedPayload);\n                digest = sha256Stable.hash(signatureBytes);\n                return _context2.abrupt(\"return\", \"0x\".concat(uint8arrays.toString(digest, 'base16')));\n\n              case 9:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function authenticate(_x) {\n        return _authenticate.apply(this, arguments);\n      }\n\n      return authenticate;\n    }()\n  }, {\n    key: \"createLink\",\n    value: function () {\n      var _createLink = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(did) {\n        var consentMessage, accountID, signedPayload;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                consentMessage = util_1.getConsentMessage(did);\n                _context3.next = 3;\n                return this.accountId();\n\n              case 3:\n                accountID = _context3.sent;\n                _context3.next = 6;\n                return toSignedPayload(consentMessage.message, accountID, this.provider);\n\n              case 6:\n                signedPayload = _context3.sent;\n                return _context3.abrupt(\"return\", {\n                  version: 1,\n                  type: \"eosio\",\n                  message: consentMessage.message,\n                  signature: signedPayload,\n                  account: accountID.toString(),\n                  timestamp: consentMessage.timestamp\n                });\n\n              case 8:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function createLink(_x2) {\n        return _createLink.apply(this, arguments);\n      }\n\n      return createLink;\n    }()\n  }, {\n    key: \"withAddress\",\n    value: function withAddress(address) {\n      return new EosioAuthProvider(this.provider, address);\n    }\n  }]);\n\n  return EosioAuthProvider;\n}();\n\nexports.EosioAuthProvider = EosioAuthProvider;\n\nfunction toCAIPChainId(chainId) {\n  return chainId.substr(0, 32);\n}\n\nfunction sanitize(str, size) {\n  return str.replace(/\\s/g, \" \").replace(new RegExp(\"(\\\\S{\".concat(size, \"})\"), \"g\"), \"$1 \");\n}\n\nfunction toPayload(message, accountID) {\n  var address = accountID.address,\n      chainId = accountID.chainId;\n  var payload = \"\".concat(message, \" [For: \").concat(address, \" on chain: \").concat(chainId, \"]\");\n  return sanitize(payload, maxWordLength);\n}\n\nexports.toPayload = toPayload;\n\nfunction toSignedPayload(_x3, _x4, _x5) {\n  return _toSignedPayload.apply(this, arguments);\n}\n\nfunction _toSignedPayload() {\n  _toSignedPayload = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(message, accountID, provider) {\n    var _accountID, requestedChainId, address, accountName, chainId, payload, _yield$provider$getKe, _yield$provider$getKe2, key;\n\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            accountID = ethereum_1.normalizeAccountId(accountID);\n            _accountID = accountID, requestedChainId = _accountID.chainId.reference, address = _accountID.address;\n            _context4.next = 4;\n            return provider.getAccountName();\n\n          case 4:\n            accountName = _context4.sent;\n            _context4.t0 = toCAIPChainId;\n            _context4.next = 8;\n            return provider.getChainId();\n\n          case 8:\n            _context4.t1 = _context4.sent;\n            chainId = (0, _context4.t0)(_context4.t1);\n\n            if (!(chainId !== requestedChainId)) {\n              _context4.next = 12;\n              break;\n            }\n\n            throw new Error(\"Provider returned a different chainId than requested [returned: \".concat(chainId, \", requested: \").concat(requestedChainId, \"]\"));\n\n          case 12:\n            if (!(accountName !== address)) {\n              _context4.next = 14;\n              break;\n            }\n\n            throw new Error(\"Provider returned a different account than requested [returned: \".concat(accountName, \", requested: \").concat(address, \"]\"));\n\n          case 14:\n            payload = toPayload(message, accountID);\n            _context4.next = 17;\n            return provider.getKeys();\n\n          case 17:\n            _yield$provider$getKe = _context4.sent;\n            _yield$provider$getKe2 = _slicedToArray(_yield$provider$getKe, 1);\n            key = _yield$provider$getKe2[0];\n            return _context4.abrupt(\"return\", provider.signArbitrary(key, payload));\n\n          case 21:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _toSignedPayload.apply(this, arguments);\n}\n\nexports.toSignedPayload = toSignedPayload;","map":{"version":3,"sources":["../src/eosio.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.toSignedPayload = exports.toPayload = exports.EosioAuthProvider = void 0;\nconst caip_1 = require(\"caip\");\nconst util_1 = require(\"./util\");\nconst ethereum_1 = require(\"./ethereum\");\nconst sha256Stable = __importStar(require(\"@stablelib/sha256\"));\nconst uint8arrays = __importStar(require(\"uint8arrays\"));\nconst maxWordLength = 12;\nclass EosioAuthProvider {\n    constructor(provider, address) {\n        this.provider = provider;\n        this.address = address;\n        this.isAuthProvider = true;\n    }\n    async accountId() {\n        const chainId = toCAIPChainId(await this.provider.getChainId());\n        return new caip_1.AccountID({\n            address: this.address,\n            chainId: `eosio:${chainId}`,\n        });\n    }\n    async authenticate(message) {\n        const accountID = await this.accountId();\n        const signedPayload = await toSignedPayload(message, accountID, this.provider);\n        const signatureBytes = uint8arrays.fromString(signedPayload);\n        const digest = sha256Stable.hash(signatureBytes);\n        return `0x${uint8arrays.toString(digest, 'base16')}`;\n    }\n    async createLink(did) {\n        const consentMessage = util_1.getConsentMessage(did);\n        const accountID = await this.accountId();\n        const signedPayload = await toSignedPayload(consentMessage.message, accountID, this.provider);\n        return {\n            version: 1,\n            type: \"eosio\",\n            message: consentMessage.message,\n            signature: signedPayload,\n            account: accountID.toString(),\n            timestamp: consentMessage.timestamp,\n        };\n    }\n    withAddress(address) {\n        return new EosioAuthProvider(this.provider, address);\n    }\n}\nexports.EosioAuthProvider = EosioAuthProvider;\nfunction toCAIPChainId(chainId) {\n    return chainId.substr(0, 32);\n}\nfunction sanitize(str, size) {\n    return str\n        .replace(/\\s/g, \" \")\n        .replace(new RegExp(`(\\\\S{${size}})`, \"g\"), \"$1 \");\n}\nfunction toPayload(message, accountID) {\n    const { address, chainId } = accountID;\n    const payload = `${message} [For: ${address} on chain: ${chainId}]`;\n    return sanitize(payload, maxWordLength);\n}\nexports.toPayload = toPayload;\nasync function toSignedPayload(message, accountID, provider) {\n    accountID = ethereum_1.normalizeAccountId(accountID);\n    const { chainId: { reference: requestedChainId }, address, } = accountID;\n    const accountName = await provider.getAccountName();\n    const chainId = toCAIPChainId(await provider.getChainId());\n    if (chainId !== requestedChainId) {\n        throw new Error(`Provider returned a different chainId than requested [returned: ${chainId}, requested: ${requestedChainId}]`);\n    }\n    if (accountName !== address) {\n        throw new Error(`Provider returned a different account than requested [returned: ${accountName}, requested: ${address}]`);\n    }\n    const payload = toPayload(message, accountID);\n    const [key] = await provider.getKeys();\n    return provider.signArbitrary(key, payload);\n}\nexports.toSignedPayload = toSignedPayload;\n//# sourceMappingURL=eosio.js.map"]},"metadata":{},"sourceType":"script"}