{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ServiceLogger = exports.DiagnosticsLogger = void 0;\n\nvar logger_base_1 = require(\"./logger-base\");\n\nvar flat_1 = __importDefault(require(\"flat\"));\n\nvar consoleLogger = {\n  'info': console.log,\n  'imp': console.log,\n  'warn': console.warn,\n  'err': console.error\n};\n\nvar DiagnosticsLogger = /*#__PURE__*/function (_logger_base_1$Diagno) {\n  _inherits(DiagnosticsLogger, _logger_base_1$Diagno);\n\n  var _super = _createSuper(DiagnosticsLogger);\n\n  function DiagnosticsLogger(logLevel) {\n    var _this;\n\n    _classCallCheck(this, DiagnosticsLogger);\n\n    _this = _super.call(this, logLevel, false);\n    _this.logger = consoleLogger;\n    return _this;\n  }\n\n  _createClass(DiagnosticsLogger, [{\n    key: \"log\",\n    value: function log(style, content) {\n      this.logger[style](content);\n    }\n  }]);\n\n  return DiagnosticsLogger;\n}(logger_base_1.DiagnosticsLoggerBase);\n\nexports.DiagnosticsLogger = DiagnosticsLogger;\n\nvar ServiceLogger = /*#__PURE__*/function (_logger_base_1$Servic) {\n  _inherits(ServiceLogger, _logger_base_1$Servic);\n\n  var _super2 = _createSuper(ServiceLogger);\n\n  function ServiceLogger(service, logLevel) {\n    _classCallCheck(this, ServiceLogger);\n\n    return _super2.call(this, service, logLevel, false);\n  }\n\n  _createClass(ServiceLogger, [{\n    key: \"format\",\n    value: function format(serviceLog) {\n      return JSON.stringify(flat_1.default(serviceLog));\n    }\n  }]);\n\n  return ServiceLogger;\n}(logger_base_1.ServiceLoggerBase);\n\nexports.ServiceLogger = ServiceLogger;","map":{"version":3,"sources":["../src/loggers-browser.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA,IAAA,aAAA,GAAA,OAAA,CAAA,eAAA,CAAA;;AAMA,IAAA,MAAA,GAAA,eAAA,CAAA,OAAA,CAAA,MAAA,CAAA,CAAA;;AAEA,IAAM,aAAa,GAAG;AACpB,UAAQ,OAAO,CAAC,GADI;AAEpB,SAAO,OAAO,CAAC,GAFK;AAGpB,UAAQ,OAAO,CAAC,IAHI;AAIpB,SAAO,OAAO,CAAC;AAJK,CAAtB;;IAUa,iB;;;;;AAEX,6BAAY,QAAZ,EAA8B;AAAA;;AAAA;;AAC5B,8BAAM,QAAN,EAAgB,KAAhB;AACA,UAAK,MAAL,GAAc,aAAd;AAF4B;AAG7B;;;;WAEM,aAAI,KAAJ,EAAqB,OAArB,EAAsE;AAE3E,WAAK,MAAL,CAAY,KAAZ,EAAmB,OAAnB;AACD;;;;EAVoC,aAAA,CAAA,qB;;AAAvC,OAAA,CAAA,iBAAA,GAAA,iBAAA;;IAgBa,a;;;;;AACZ,yBAAY,OAAZ,EAA6B,QAA7B,EAA+C;AAAA;;AAAA,8BACtC,OADsC,EAC7B,QAD6B,EACnB,KADmB;AAE7C;;;;WACM,gBAAO,UAAP,EAA6B;AAClC,aAAO,IAAI,CAAC,SAAL,CAAe,MAAA,CAAA,OAAA,CAAQ,UAAR,CAAf,CAAP;AACD;;;;EANgC,aAAA,CAAA,iB;;AAAnC,OAAA,CAAA,aAAA,GAAA,aAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ServiceLogger = exports.DiagnosticsLogger = void 0;\nconst logger_base_1 = require(\"./logger-base\");\nconst flat_1 = __importDefault(require(\"flat\"));\nconst consoleLogger = {\n    'info': console.log,\n    'imp': console.log,\n    'warn': console.warn,\n    'err': console.error\n};\nclass DiagnosticsLogger extends logger_base_1.DiagnosticsLoggerBase {\n    constructor(logLevel) {\n        super(logLevel, false);\n        this.logger = consoleLogger;\n    }\n    log(style, content) {\n        this.logger[style](content);\n    }\n}\nexports.DiagnosticsLogger = DiagnosticsLogger;\nclass ServiceLogger extends logger_base_1.ServiceLoggerBase {\n    constructor(service, logLevel) {\n        super(service, logLevel, false);\n    }\n    format(serviceLog) {\n        return JSON.stringify(flat_1.default(serviceLog));\n    }\n}\nexports.ServiceLogger = ServiceLogger;\n//# sourceMappingURL=loggers-browser.js.map"]},"metadata":{},"sourceType":"script"}