{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar _createClass = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _classCallCheck = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _inherits = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TestUtils = void 0;\n\nvar operators_1 = require(\"rxjs/operators\");\n\nvar rxjs_1 = require(\"rxjs\");\n\nvar streamid_1 = require(\"@ceramicnetwork/streamid\");\n\nvar FakeRunningState = /*#__PURE__*/function (_rxjs_1$BehaviorSubje) {\n  _inherits(FakeRunningState, _rxjs_1$BehaviorSubje);\n\n  var _super = _createSuper(FakeRunningState);\n\n  function FakeRunningState(value) {\n    var _this;\n\n    _classCallCheck(this, FakeRunningState);\n\n    _this = _super.call(this, value);\n    _this.state = _this.value;\n    _this.id = new streamid_1.StreamID(_this.state.type, _this.state.log[0].cid);\n    return _this;\n  }\n\n  return FakeRunningState;\n}(rxjs_1.BehaviorSubject);\n\nvar TestUtils = /*#__PURE__*/function () {\n  function TestUtils() {\n    _classCallCheck(this, TestUtils);\n  }\n\n  _createClass(TestUtils, null, [{\n    key: \"registerChangeListener\",\n    value: function registerChangeListener(stream) {\n      return stream.pipe(operators_1.take(1)).toPromise();\n    }\n  }, {\n    key: \"waitForState\",\n    value: function () {\n      var _waitForState = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(stream, timeout, predicate, onFailure) {\n        var timeoutPromise, completionPromise;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!predicate(stream.state)) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\");\n\n              case 2:\n                timeoutPromise = new Promise(function (resolve) {\n                  return setTimeout(resolve, timeout);\n                });\n                completionPromise = stream.pipe(operators_1.filter(function (state) {\n                  return predicate(state);\n                })).toPromise();\n                _context.next = 6;\n                return Promise.race([timeoutPromise, completionPromise]);\n\n              case 6:\n                if (!predicate(stream.state)) {\n                  onFailure();\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function waitForState(_x, _x2, _x3, _x4) {\n        return _waitForState.apply(this, arguments);\n      }\n\n      return waitForState;\n    }()\n  }, {\n    key: \"runningState\",\n    value: function runningState(state) {\n      return new FakeRunningState(state);\n    }\n  }]);\n\n  return TestUtils;\n}();\n\nexports.TestUtils = TestUtils;","map":{"version":3,"sources":["../../src/utils/test-utils.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;AACA,IAAA,WAAA,GAAA,OAAA,CAAA,gBAAA,CAAA;;AACA,IAAA,MAAA,GAAA,OAAA,CAAA,MAAA,CAAA;;AAEA,IAAA,UAAA,GAAA,OAAA,CAAA,0BAAA,CAAA;;IAEM,gB;;;;;AAIJ,4BAAY,KAAZ,EAA8B;AAAA;;AAAA;;AAC5B,8BAAM,KAAN;AACA,UAAK,KAAL,GAAa,MAAK,KAAlB;AACA,UAAK,EAAL,GAAU,IAAI,UAAA,CAAA,QAAJ,CAAa,MAAK,KAAL,CAAW,IAAxB,EAA8B,MAAK,KAAL,CAAW,GAAX,CAAe,CAAf,EAAkB,GAAhD,CAAV;AAH4B;AAI7B;;;EAR4B,MAAA,CAAA,e;;IAWlB,S;;;;;;;WAMT,gCAA8B,MAA9B,EAA4C;AACxC,aAAO,MAAM,CAAC,IAAP,CAAY,WAAA,CAAA,IAAA,CAAK,CAAL,CAAZ,EAAqB,SAArB,EAAP;AACH;;;;mFAUD,iBAA0B,MAA1B,EAC0B,OAD1B,EAE0B,SAF1B,EAG0B,SAH1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAIQ,SAAS,CAAC,MAAM,CAAC,KAAR,CAJjB;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAKU,gBAAA,cALV,GAK2B,IAAI,OAAJ,CAAY,UAAA,OAAO;AAAA,yBAAI,UAAU,CAAC,OAAD,EAAU,OAAV,CAAd;AAAA,iBAAnB,CAL3B;AAMU,gBAAA,iBANV,GAM8B,MAAM,CAAC,IAAP,CAAY,WAAA,CAAA,MAAA,CAAO,UAAA,KAAK;AAAA,yBAAI,SAAS,CAAC,KAAD,CAAb;AAAA,iBAAZ,CAAZ,EAA+C,SAA/C,EAN9B;AAAA;AAAA,uBAOU,OAAO,CAAC,IAAR,CAAa,CAAC,cAAD,EAAiB,iBAAjB,CAAb,CAPV;;AAAA;AAQI,oBAAI,CAAC,SAAS,CAAC,MAAM,CAAC,KAAR,CAAd,EAA8B;AAC1B,kBAAA,SAAS;AACZ;;AAVL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;WAaA,sBAAoB,KAApB,EAAsC;AACpC,aAAO,IAAI,gBAAJ,CAAqB,KAArB,CAAP;AACD;;;;;;AAjCL,OAAA,CAAA,SAAA,GAAA,SAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TestUtils = void 0;\nconst operators_1 = require(\"rxjs/operators\");\nconst rxjs_1 = require(\"rxjs\");\nconst streamid_1 = require(\"@ceramicnetwork/streamid\");\nclass FakeRunningState extends rxjs_1.BehaviorSubject {\n    constructor(value) {\n        super(value);\n        this.state = this.value;\n        this.id = new streamid_1.StreamID(this.state.type, this.state.log[0].cid);\n    }\n}\nclass TestUtils {\n    static registerChangeListener(stream) {\n        return stream.pipe(operators_1.take(1)).toPromise();\n    }\n    static async waitForState(stream, timeout, predicate, onFailure) {\n        if (predicate(stream.state))\n            return;\n        const timeoutPromise = new Promise(resolve => setTimeout(resolve, timeout));\n        const completionPromise = stream.pipe(operators_1.filter(state => predicate(state))).toPromise();\n        await Promise.race([timeoutPromise, completionPromise]);\n        if (!predicate(stream.state)) {\n            onFailure();\n        }\n    }\n    static runningState(state) {\n        return new FakeRunningState(state);\n    }\n}\nexports.TestUtils = TestUtils;\n//# sourceMappingURL=test-utils.js.map"]},"metadata":{},"sourceType":"script"}