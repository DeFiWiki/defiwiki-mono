{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar spec_1 = require(\"./spec\");\n\nvar utils_1 = require(\"./utils\");\n\nvar ChainID = /*#__PURE__*/function () {\n  function ChainID(params) {\n    _classCallCheck(this, ChainID);\n\n    if (typeof params === \"string\") {\n      params = ChainID.parse(params);\n    }\n\n    this.namespace = params.namespace;\n    this.reference = params.reference;\n  }\n\n  _createClass(ChainID, [{\n    key: \"toString\",\n    value: function toString() {\n      return ChainID.format(this.toJson());\n    }\n  }, {\n    key: \"toJson\",\n    value: function toJson() {\n      return {\n        namespace: this.namespace,\n        reference: this.reference\n      };\n    }\n  }], [{\n    key: \"parse\",\n    value: function parse(id) {\n      if (!utils_1.isValidId(id, this.spec)) {\n        throw new Error(\"Invalid \".concat(this.spec.name, \" provided: \").concat(id));\n      }\n\n      return new ChainID(utils_1.getParams(id, this.spec)).toJson();\n    }\n  }, {\n    key: \"format\",\n    value: function format(params) {\n      return utils_1.joinParams(params, this.spec);\n    }\n  }]);\n\n  return ChainID;\n}();\n\nexports.ChainID = ChainID;\nChainID.spec = spec_1.CAIP[\"2\"];","map":{"version":3,"sources":["../../src/chain.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,IAAA,MAAA,GAAA,OAAA,CAAA,QAAA,CAAA;;AAEA,IAAA,OAAA,GAAA,OAAA,CAAA,SAAA,CAAA;;IAOa,O;AAiBX,mBAAY,MAAZ,EAA0C;AAAA;;AACxC,QAAI,OAAO,MAAP,KAAkB,QAAtB,EAAgC;AAC9B,MAAA,MAAM,GAAG,OAAO,CAAC,KAAR,CAAc,MAAd,CAAT;AACD;;AACD,SAAK,SAAL,GAAiB,MAAM,CAAC,SAAxB;AACA,SAAK,SAAL,GAAiB,MAAM,CAAC,SAAxB;AACD;;;;WAEM,oBAAQ;AACb,aAAO,OAAO,CAAC,MAAR,CAAe,KAAK,MAAL,EAAf,CAAP;AACD;;;WAEM,kBAAM;AACX,aAAO;AACL,QAAA,SAAS,EAAE,KAAK,SADX;AAEL,QAAA,SAAS,EAAE,KAAK;AAFX,OAAP;AAID;;;WA/BM,eAAa,EAAb,EAAuB;AAC5B,UAAI,CAAC,OAAA,CAAA,SAAA,CAAU,EAAV,EAAc,KAAK,IAAnB,CAAL,EAA+B;AAC7B,cAAM,IAAI,KAAJ,mBAAqB,KAAK,IAAL,CAAU,IAA/B,wBAAiD,EAAjD,EAAN;AACD;;AACD,aAAO,IAAI,OAAJ,CAAY,OAAA,CAAA,SAAA,CAAyB,EAAzB,EAA6B,KAAK,IAAlC,CAAZ,EAAqD,MAArD,EAAP;AACD;;;WAEM,gBAAc,MAAd,EAAmC;AACxC,aAAO,OAAA,CAAA,UAAA,CAAW,MAAX,EAA0B,KAAK,IAA/B,CAAP;AACD;;;;;;AAZH,OAAA,CAAA,OAAA,GAAA,OAAA;AACgB,OAAA,CAAA,IAAA,GAAuB,MAAA,CAAA,IAAA,CAAK,GAAL,CAAvB","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst spec_1 = require(\"./spec\");\nconst utils_1 = require(\"./utils\");\nclass ChainID {\n    constructor(params) {\n        if (typeof params === \"string\") {\n            params = ChainID.parse(params);\n        }\n        this.namespace = params.namespace;\n        this.reference = params.reference;\n    }\n    static parse(id) {\n        if (!utils_1.isValidId(id, this.spec)) {\n            throw new Error(`Invalid ${this.spec.name} provided: ${id}`);\n        }\n        return new ChainID(utils_1.getParams(id, this.spec)).toJson();\n    }\n    static format(params) {\n        return utils_1.joinParams(params, this.spec);\n    }\n    toString() {\n        return ChainID.format(this.toJson());\n    }\n    toJson() {\n        return {\n            namespace: this.namespace,\n            reference: this.reference,\n        };\n    }\n}\nexports.ChainID = ChainID;\nChainID.spec = spec_1.CAIP[\"2\"];\n//# sourceMappingURL=chain.js.map"]},"metadata":{},"sourceType":"script"}