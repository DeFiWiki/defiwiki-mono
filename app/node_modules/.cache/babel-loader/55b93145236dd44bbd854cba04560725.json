{"ast":null,"code":"import _slicedToArray from\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _regeneratorRuntime from\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _objectSpread from\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _asyncToGenerator from\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import React,{useState}from\"react\";import Ceramic from\"@ceramicnetwork/http-client\";import{DID}from'dids';import KeyDidResolver from'key-did-resolver';import ThreeIdResolver from\"@ceramicnetwork/3id-did-resolver\";import{getProvider}from\"./wallet\";import logo from\"./logo.svg\";import'./App.css';import{Button}from\"antd\";import ProtocolCard from'./views/ProtocolCard';import{IDX}from\"@ceramicstudio/idx\";// TODO: refactor out web3 stuff\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var INFURA_KEY=\"6136ff8f36ce4d83a44157cc7b2e46e2\";function App(){/* --------------------------\r\n   *   Ceramic Initialization\r\n   * --------------------------\r\n   */ // TODO: add configuration for local vs remote\nvar API_URL=\"https://localhost:7007\";// const API_URL = \"https://ceramic-clay.3boxlabs.com\";\nvar ceramic=new Ceramic(API_URL);// const ceramic = new CeramicClient(API_URL); \nvar createIdx=function createIdx(ceramic){var idx=new IDX({ceramic:ceramic});window.idx=idx;return idx;};var authenticate=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var provider,resolver,did,idx;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getProvider();case 2:provider=_context.sent;resolver=_objectSpread(_objectSpread({},KeyDidResolver.getResolver()),ThreeIdResolver.getResolver(ceramic));did=new DID({provider:provider,resolver:resolver});console.log(did);_context.next=8;return did.authenticate();case 8:console.log(did);_context.next=11;return ceramic.setDID(did);case 11:console.log(did);idx=createIdx(ceramic);// window.did = did;\nreturn _context.abrupt(\"return\",idx.id);case 14:case\"end\":return _context.stop();}}},_callee);}));return function authenticate(){return _ref.apply(this,arguments);};}();// TODO: Fetch the list of protocols from ceramic\nvar _useState=useState([\"hi\",\"bye\"]),_useState2=_slicedToArray(_useState,2),protocols=_useState2[0],setProtocols=_useState2[1];var addProtocol=function addProtocol(){var name=Math.random();console.log(\"Name: \".concat(name));var newProtocols=protocols.concat([name]);setProtocols(newProtocols);};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:/*#__PURE__*/_jsxs(\"header\",{className:\"App-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Protocols\"}),/*#__PURE__*/_jsx(Button,{onClick:addProtocol,children:\" Add Protocol \"}),/*#__PURE__*/_jsx(\"div\",{className:\"container--grid\",children:protocols.map(function(protocol,i){return/*#__PURE__*/_jsx(ProtocolCard,{name:protocol});})}),/*#__PURE__*/_jsx(Button,{onClick:authenticate,children:\"Connect Wallet\"})]})});}export default App;","map":{"version":3,"sources":["C:/not-sync/git2/defiwiki-mono/app/src/App.js"],"names":["React","useState","Ceramic","DID","KeyDidResolver","ThreeIdResolver","getProvider","Button","ProtocolCard","IDX","INFURA_KEY","App","API_URL","ceramic","createIdx","idx","window","authenticate","provider","resolver","getResolver","did","console","log","setDID","id","protocols","setProtocols","addProtocol","name","Math","random","newProtocols","concat","map","protocol","i"],"mappings":"gmBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAOC,CAAAA,OAAP,KAAoB,6BAApB,CAEA,OAASC,GAAT,KAAoB,MAApB,CACA,MAAOC,CAAAA,cAAP,KAA2B,kBAA3B,CACA,MAAOC,CAAAA,eAAP,KAA4B,kCAA5B,CAEA,OAASC,WAAT,KAA4B,UAA5B,C,6BAGA,MAAO,WAAP,CAEA,OAASC,MAAT,KAAuB,MAAvB,CACA,MAAOC,CAAAA,YAAP,KAAyB,sBAAzB,CACA,OAASC,GAAT,KAAoB,oBAApB,CAGA;wFACA,GAAMC,CAAAA,UAAU,CAAG,kCAAnB,CAEA,QAASC,CAAAA,GAAT,EAAe,CAEb;AACF;AACA;AACA,KALe,CAOb;AACA,GAAMC,CAAAA,OAAO,CAAG,wBAAhB,CACA;AACA,GAAMC,CAAAA,OAAO,CAAG,GAAIX,CAAAA,OAAJ,CAAYU,OAAZ,CAAhB,CACA;AAEA,GAAME,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACD,OAAD,CAAa,CAC7B,GAAME,CAAAA,GAAG,CAAG,GAAIN,CAAAA,GAAJ,CAAQ,CAAEI,OAAO,CAAPA,OAAF,CAAR,CAAZ,CACAG,MAAM,CAACD,GAAP,CAAaA,GAAb,CACA,MAAOA,CAAAA,GAAP,CACD,CAJD,CAMA,GAAME,CAAAA,YAAY,0FAAG,uLACIX,CAAAA,WAAW,EADf,QACbY,QADa,eAEbC,QAFa,gCAGIf,cAAc,CAACgB,WAAf,EAHJ,EAIIf,eAAe,CAACe,WAAhB,CAA4BP,OAA5B,CAJJ,EAMbQ,GANa,CAMP,GAAIlB,CAAAA,GAAJ,CAAQ,CAAEe,QAAQ,CAARA,QAAF,CAAYC,QAAQ,CAARA,QAAZ,CAAR,CANO,CAOnBG,OAAO,CAACC,GAAR,CAAYF,GAAZ,EAPmB,sBAQbA,CAAAA,GAAG,CAACJ,YAAJ,EARa,QASnBK,OAAO,CAACC,GAAR,CAAYF,GAAZ,EATmB,uBAUbR,CAAAA,OAAO,CAACW,MAAR,CAAeH,GAAf,CAVa,SAWnBC,OAAO,CAACC,GAAR,CAAYF,GAAZ,EACMN,GAZa,CAYPD,SAAS,CAACD,OAAD,CAZF,CAanB;AAbmB,gCAcZE,GAAG,CAACU,EAdQ,yDAAH,kBAAZR,CAAAA,YAAY,0CAAlB,CAkBA;AArCa,cAsCqBhB,QAAQ,CAAC,CAAE,IAAF,CAAQ,KAAR,CAAD,CAtC7B,wCAsCNyB,SAtCM,eAsCKC,YAtCL,eAwCb,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAM,CACxB,GAAMC,CAAAA,IAAI,CAAGC,IAAI,CAACC,MAAL,EAAb,CACAT,OAAO,CAACC,GAAR,iBAAqBM,IAArB,GAEA,GAAMG,CAAAA,YAAY,CAAGN,SAAS,CAACO,MAAV,CAAiB,CAACJ,IAAD,CAAjB,CAArB,CACAF,YAAY,CAACK,YAAD,CAAZ,CACD,CAND,CAQA,mBACE,YAAK,SAAS,CAAC,KAAf,uBACE,gBAAQ,SAAS,CAAC,YAAlB,wBACE,iCADF,cAEE,KAAC,MAAD,EAAQ,OAAO,CAAEJ,WAAjB,4BAFF,cAIE,YAAK,SAAS,CAAC,iBAAf,UAEIF,SAAS,CAACQ,GAAV,CAAc,SAASC,QAAT,CAAmBC,CAAnB,CAAsB,CAClC,mBAAO,KAAC,YAAD,EAAc,IAAI,CAAED,QAApB,EAAP,CACD,CAFD,CAFJ,EAJF,cAWE,KAAC,MAAD,EAAQ,OAAO,CAAElB,YAAjB,4BAXF,GADF,EADF,CAiBD,CAED,cAAeN,CAAAA,GAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport Ceramic from \"@ceramicnetwork/http-client\";\r\n\r\nimport { DID } from 'dids';\r\nimport KeyDidResolver from 'key-did-resolver';\r\nimport ThreeIdResolver from \"@ceramicnetwork/3id-did-resolver\";\r\n\r\nimport { getProvider } from \"./wallet\";\r\n\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\n\r\nimport { Button } from \"antd\";\r\nimport ProtocolCard from './views/ProtocolCard';\r\nimport { IDX } from \"@ceramicstudio/idx\";\r\n  \r\n\r\n// TODO: refactor out web3 stuff\r\nconst INFURA_KEY = \"6136ff8f36ce4d83a44157cc7b2e46e2\";\r\n\r\nfunction App() {\r\n\r\n  /* --------------------------\r\n   *   Ceramic Initialization\r\n   * --------------------------\r\n   */\r\n\r\n  // TODO: add configuration for local vs remote\r\n  const API_URL = \"https://localhost:7007\";\r\n  // const API_URL = \"https://ceramic-clay.3boxlabs.com\";\r\n  const ceramic = new Ceramic(API_URL); \r\n  // const ceramic = new CeramicClient(API_URL); \r\n\r\n  const createIdx = (ceramic) => {\r\n    const idx = new IDX({ ceramic });\r\n    window.idx = idx;\r\n    return idx;\r\n  }\r\n\r\n  const authenticate = async () => {\r\n    const provider = await getProvider();\r\n    const resolver = { \r\n                        ...KeyDidResolver.getResolver(), \r\n                        ...ThreeIdResolver.getResolver(ceramic)\r\n                     };\r\n    const did = new DID({ provider, resolver });\r\n    console.log(did);\r\n    await did.authenticate();\r\n    console.log(did);\r\n    await ceramic.setDID(did);\r\n    console.log(did);\r\n    const idx = createIdx(ceramic);\r\n    // window.did = did;\r\n    return idx.id;\r\n  }\r\n\r\n\r\n  // TODO: Fetch the list of protocols from ceramic\r\n  const [protocols, setProtocols] = useState([ \"hi\", \"bye\" ]);\r\n\r\n  const addProtocol = () => {\r\n    const name = Math.random();\r\n    console.log(`Name: ${name}`);\r\n\r\n    const newProtocols = protocols.concat([name]);\r\n    setProtocols(newProtocols)\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Protocols</h1>\r\n        <Button onClick={addProtocol}> Add Protocol </Button>\r\n      \r\n        <div className=\"container--grid\">\r\n          {\r\n            protocols.map(function(protocol, i) {\r\n              return <ProtocolCard name={protocol} />\r\n            })\r\n          }\r\n        </div>\r\n        <Button onClick={authenticate}>Connect Wallet</Button>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}