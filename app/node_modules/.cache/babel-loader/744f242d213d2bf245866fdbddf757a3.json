{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SubscriptionSet = void 0;\n\nvar SubscriptionSet = /*#__PURE__*/function () {\n  function SubscriptionSet() {\n    var subscriptions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : new Set();\n\n    _classCallCheck(this, SubscriptionSet);\n\n    this.subscriptions = subscriptions;\n  }\n\n  _createClass(SubscriptionSet, [{\n    key: \"add\",\n    value: function add(subscription) {\n      var _this = this;\n\n      subscription.add(function () {\n        _this.subscriptions.delete(subscription);\n      });\n      this.subscriptions.add(subscription);\n    }\n  }, {\n    key: \"unsubscribe\",\n    value: function unsubscribe() {\n      this.subscriptions.forEach(function (s) {\n        return s.unsubscribe();\n      });\n    }\n  }]);\n\n  return SubscriptionSet;\n}();\n\nexports.SubscriptionSet = SubscriptionSet;","map":{"version":3,"sources":["../src/subscription-set.ts"],"names":[],"mappings":";;;;;;;;;;;IAOa,e;AACX,6BAAiE;AAAA,QAA5C,aAA4C,uEAAT,IAAI,GAAJ,EAAS;;AAAA;;AAA5C,SAAA,aAAA,GAAA,aAAA;AAAgD;;;;WAKrE,aAAI,YAAJ,EAA8B;AAAA;;AAC5B,MAAA,YAAY,CAAC,GAAb,CAAiB,YAAK;AACpB,QAAA,KAAI,CAAC,aAAL,CAAmB,MAAnB,CAA0B,YAA1B;AACD,OAFD;AAGA,WAAK,aAAL,CAAmB,GAAnB,CAAuB,YAAvB;AACD;;;WAKD,uBAAW;AACT,WAAK,aAAL,CAAmB,OAAnB,CAA2B,UAAC,CAAD;AAAA,eAAO,CAAC,CAAC,WAAF,EAAP;AAAA,OAA3B;AACD;;;;;;AAlBH,OAAA,CAAA,eAAA,GAAA,eAAA","sourceRoot":"","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SubscriptionSet = void 0;\nclass SubscriptionSet {\n    constructor(subscriptions = new Set()) {\n        this.subscriptions = subscriptions;\n    }\n    add(subscription) {\n        subscription.add(() => {\n            this.subscriptions.delete(subscription);\n        });\n        this.subscriptions.add(subscription);\n    }\n    unsubscribe() {\n        this.subscriptions.forEach((s) => s.unsubscribe());\n    }\n}\nexports.SubscriptionSet = SubscriptionSet;\n//# sourceMappingURL=subscription-set.js.map"]},"metadata":{},"sourceType":"script"}