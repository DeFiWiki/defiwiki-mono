{"ast":null,"code":"import _regeneratorRuntime from\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import WalletConnectProvider from'@walletconnect/web3-provider';import{ThreeIdConnect,EthereumAuthProvider}from'@3id/connect';import Web3Modal from'web3modal';// @ts-ignore\nexport var threeID=new ThreeIdConnect();export var web3Modal=new Web3Modal({network:'mainnet',cacheProvider:true,providerOptions:{walletconnect:{package:WalletConnectProvider,options:{infuraId:'e87f83fb85bf4aa09bdf6605ebe144b7'}}}});export function getProvider(){return _getProvider.apply(this,arguments);}function _getProvider(){_getProvider=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var ethProvider,addresses;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return web3Modal.connect();case 2:ethProvider=_context.sent;_context.next=5;return ethProvider.enable();case 5:addresses=_context.sent;_context.next=8;return threeID.connect(new EthereumAuthProvider(ethProvider,addresses[0]));case 8:return _context.abrupt(\"return\",threeID.getDidProvider());case 9:case\"end\":return _context.stop();}}},_callee);}));return _getProvider.apply(this,arguments);}","map":{"version":3,"sources":["C:/not-sync/git2/defiwiki-mono/app/src/wallet.js"],"names":["WalletConnectProvider","ThreeIdConnect","EthereumAuthProvider","Web3Modal","threeID","web3Modal","network","cacheProvider","providerOptions","walletconnect","package","options","infuraId","getProvider","connect","ethProvider","enable","addresses","getDidProvider"],"mappings":"+SAAA,MAAOA,CAAAA,qBAAP,KAAkC,8BAAlC,CACA,OAASC,cAAT,CAAyBC,oBAAzB,KAAqD,cAArD,CACA,MAAOC,CAAAA,SAAP,KAAsB,WAAtB,CAEA;AACA,MAAO,IAAMC,CAAAA,OAAO,CAAG,GAAIH,CAAAA,cAAJ,EAAhB,CAEP,MAAO,IAAMI,CAAAA,SAAS,CAAG,GAAIF,CAAAA,SAAJ,CAAc,CACnCG,OAAO,CAAE,SAD0B,CAEnCC,aAAa,CAAE,IAFoB,CAGnCC,eAAe,CAAE,CACbC,aAAa,CAAE,CACXC,OAAO,CAAEV,qBADE,CAEXW,OAAO,CAAE,CACLC,QAAQ,CAAE,kCADL,CAFE,CADF,CAHkB,CAAd,CAAlB,CAaP,eAAsBC,CAAAA,WAAtB,8C,6FAAO,mLACuBR,CAAAA,SAAS,CAACS,OAAV,EADvB,QACGC,WADH,qCAEqBA,CAAAA,WAAW,CAACC,MAAZ,EAFrB,QAEGC,SAFH,qCAGGb,CAAAA,OAAO,CAACU,OAAR,CAAgB,GAAIZ,CAAAA,oBAAJ,CAAyBa,WAAzB,CAAsCE,SAAS,CAAC,CAAD,CAA/C,CAAhB,CAHH,wCAIIb,OAAO,CAACc,cAAR,EAJJ,wD","sourcesContent":["import WalletConnectProvider from '@walletconnect/web3-provider'\r\nimport { ThreeIdConnect, EthereumAuthProvider } from '@3id/connect'\r\nimport Web3Modal from 'web3modal'\r\n\r\n// @ts-ignore\r\nexport const threeID = new ThreeIdConnect()\r\n\r\nexport const web3Modal = new Web3Modal({\r\n    network: 'mainnet',\r\n    cacheProvider: true,\r\n    providerOptions: {\r\n        walletconnect: {\r\n            package: WalletConnectProvider,\r\n            options: {\r\n                infuraId: 'e87f83fb85bf4aa09bdf6605ebe144b7',\r\n            },\r\n        },\r\n    },\r\n})\r\n\r\nexport async function getProvider() {\r\n    const ethProvider = await web3Modal.connect()\r\n    const addresses = await ethProvider.enable()\r\n    await threeID.connect(new EthereumAuthProvider(ethProvider, addresses[0]))\r\n    return threeID.getDidProvider()\r\n}"]},"metadata":{},"sourceType":"module"}