{"ast":null,"code":"\"use strict\";\n\nvar _defineProperty = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"C:/not-sync/git2/defiwiki-mono/app/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/asyncToGenerator\");\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  Object.defineProperty(o, k2, {\n    enumerable: true,\n    get: function get() {\n      return m[k];\n    }\n  });\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) {\n    if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  }\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\n\nvar u8a = __importStar(require(\"uint8arrays\"));\n\nvar lru_map_1 = require(\"lru_map\");\n\nvar THREEBOX_API_URL = 'https://ipfs.3box.io';\nvar LIMIT = 100;\nvar fetchCache = new lru_map_1.LRUMap(LIMIT);\n\nvar fetchJson = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(url) {\n    var cached, r, json;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            cached = fetchCache.get(url);\n\n            if (!cached) {\n              _context.next = 3;\n              break;\n            }\n\n            return _context.abrupt(\"return\", cached);\n\n          case 3:\n            _context.next = 5;\n            return cross_fetch_1.default(url);\n\n          case 5:\n            r = _context.sent;\n\n            if (!r.ok) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 9;\n            return r.json();\n\n          case 9:\n            json = _context.sent;\n            fetchCache.set(url, json);\n            return _context.abrupt(\"return\", json);\n\n          case 14:\n            throw new Error('Not a valid 3ID');\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function fetchJson(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nvar didDocReq = function didDocReq(cid) {\n  return \"\".concat(THREEBOX_API_URL, \"/did-doc?cid=\").concat(encodeURIComponent(cid));\n};\n\nvar ipfsMock = {\n  dag: {\n    get: function () {\n      var _get = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(cid) {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                return _context2.abrupt(\"return\", fetchJson(didDocReq(cid)));\n\n              case 1:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function get(_x2) {\n        return _get.apply(this, arguments);\n      }\n\n      return get;\n    }()\n  }\n};\n\nvar encodeKey = function encodeKey(key, encryption) {\n  var bytes = new Uint8Array(key.length + 2);\n\n  if (encryption) {\n    bytes[0] = 0xec;\n  } else {\n    bytes[0] = 0xe7;\n  }\n\n  bytes[1] = 0x01;\n  bytes.set(key, 2);\n  return \"z\".concat(u8a.toString(bytes, 'base58btc'));\n};\n\nvar compressKey = function compressKey(key) {\n  var xpoint = key.slice(2, 66);\n  var ypoint = key.slice(66, 130);\n  var prefix = (ypoint & 1) === 0 ? '02' : '03';\n  return \"\".concat(prefix).concat(xpoint);\n};\n\nvar LegacyResolver = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(didId) {\n    var _publicKeys;\n\n    var ipfs,\n        doc,\n        signingKey,\n        encryptionKey,\n        keyEntrySigning,\n        keyEntryEncryption,\n        signingKeyCompressed,\n        signing,\n        encryption,\n        _args3 = arguments;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            ipfs = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : ipfsMock;\n            _context3.next = 3;\n            return ipfs.dag.get(didId);\n\n          case 3:\n            doc = _context3.sent.value;\n            _context3.prev = 4;\n            keyEntrySigning = doc.publicKey.findIndex(function (e) {\n              return e.id.endsWith('signingKey');\n            });\n            keyEntryEncryption = doc.publicKey.findIndex(function (e) {\n              return e.id.endsWith('encryptionKey');\n            });\n            signingKey = doc.publicKey[keyEntrySigning].publicKeyHex;\n            encryptionKey = doc.publicKey[keyEntryEncryption].publicKeyBase64;\n            _context3.next = 14;\n            break;\n\n          case 11:\n            _context3.prev = 11;\n            _context3.t0 = _context3[\"catch\"](4);\n            throw new Error('Not a valid 3ID');\n\n          case 14:\n            signingKeyCompressed = compressKey(signingKey);\n            signing = encodeKey(u8a.fromString(signingKeyCompressed, 'base16'));\n            encryption = encodeKey(u8a.fromString(encryptionKey, 'base64pad'), true);\n            return _context3.abrupt(\"return\", {\n              keyDid: \"did:key:\".concat(signing),\n              publicKeys: (_publicKeys = {}, _defineProperty(_publicKeys, signing.slice(-15), signing), _defineProperty(_publicKeys, encryption.slice(-15), encryption), _publicKeys)\n            });\n\n          case 18:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3, null, [[4, 11]]);\n  }));\n\n  return function LegacyResolver(_x3) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexports.default = LegacyResolver;","map":{"version":3,"sources":["../src/legacyResolver.ts"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["\"use strict\";\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst cross_fetch_1 = __importDefault(require(\"cross-fetch\"));\nconst u8a = __importStar(require(\"uint8arrays\"));\nconst lru_map_1 = require(\"lru_map\");\nconst THREEBOX_API_URL = 'https://ipfs.3box.io';\nconst LIMIT = 100;\nconst fetchCache = new lru_map_1.LRUMap(LIMIT);\nconst fetchJson = async (url) => {\n    const cached = fetchCache.get(url);\n    if (cached)\n        return cached;\n    const r = await cross_fetch_1.default(url);\n    if (r.ok) {\n        const json = await r.json();\n        fetchCache.set(url, json);\n        return json;\n    }\n    else {\n        throw new Error('Not a valid 3ID');\n    }\n};\nconst didDocReq = (cid) => `${THREEBOX_API_URL}/did-doc?cid=${encodeURIComponent(cid)}`;\nconst ipfsMock = {\n    dag: {\n        get: async (cid) => fetchJson(didDocReq(cid))\n    }\n};\nconst encodeKey = (key, encryption) => {\n    const bytes = new Uint8Array(key.length + 2);\n    if (encryption) {\n        bytes[0] = 0xec;\n    }\n    else {\n        bytes[0] = 0xe7;\n    }\n    bytes[1] = 0x01;\n    bytes.set(key, 2);\n    return `z${u8a.toString(bytes, 'base58btc')}`;\n};\nconst compressKey = (key) => {\n    const xpoint = key.slice(2, 66);\n    const ypoint = key.slice(66, 130);\n    const prefix = (ypoint & 1) === 0 ? '02' : '03';\n    return `${prefix}${xpoint}`;\n};\nconst LegacyResolver = async (didId, ipfs = ipfsMock) => {\n    const doc = (await ipfs.dag.get(didId)).value;\n    let signingKey, encryptionKey;\n    try {\n        const keyEntrySigning = doc.publicKey.findIndex(e => e.id.endsWith('signingKey'));\n        const keyEntryEncryption = doc.publicKey.findIndex(e => e.id.endsWith('encryptionKey'));\n        signingKey = doc.publicKey[keyEntrySigning].publicKeyHex;\n        encryptionKey = doc.publicKey[keyEntryEncryption].publicKeyBase64;\n    }\n    catch (e) {\n        throw new Error('Not a valid 3ID');\n    }\n    const signingKeyCompressed = compressKey(signingKey);\n    const signing = encodeKey(u8a.fromString(signingKeyCompressed, 'base16'));\n    const encryption = encodeKey(u8a.fromString(encryptionKey, 'base64pad'), true);\n    return {\n        keyDid: `did:key:${signing}`,\n        publicKeys: {\n            [signing.slice(-15)]: signing,\n            [encryption.slice(-15)]: encryption,\n        }\n    };\n};\nexports.default = LegacyResolver;\n//# sourceMappingURL=legacyResolver.js.map"]},"metadata":{},"sourceType":"script"}